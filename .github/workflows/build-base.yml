name: build rpi-alpine-base.img

on:
  pull_request: ~
  push:
    branches:
      - master
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  ALPINE_VERSION: 3.10.2
  ALPINE_ARCH: aarch64
  ALPINE_CHROOT_INSTALL_CHECKSUM: df472cbd2dc93eb0b3126d06209363c4fc328ea3
  ALPINE_CHROOT_INSTALL: https://raw.githubusercontent.com/alpinelinux/alpine-chroot-install/v0.11.0/alpine-chroot-install
  PACKER_VERSION: 1.4.5
  PACKER_BUILDER_ARM_IMAGE_VERSION: 0.1.3

jobs:
  build_base:
    name: build alpine-rpi-base
    runs-on: [ubuntu-18.04]
    steps:
      - uses: actions/checkout@v1
      - run: curl -fsSL "$ALPINE_CHROOT_INSTALL" -o alpine-chroot-install
      - run: echo "$ALPINE_CHROOT_INSTALL_CHECKSUM alpine-chroot-install" | sha1sum -c
      - run: chmod +x alpine-chroot-install
      - run: sudo chown root:root alpine-chroot-install
      - name: Run a one-line script
        run: sudo ./make-image $ALPINE_VERSION $ALPINE_ARCH

      - run: mkdir images
      - run: mv alpine-rpi-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img.gz images/alpine-rpi-base-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img.gz
      - run: |
          cd images
          sha256sum alpine-rpi-base-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img.gz >> sha256sums.txt
      - name: Upload release
        uses: actions/upload-artifact@v1
        with:
          name: images
          path: images/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          #tag_name: ${{ github.ref }} # todo need to update the repository dispatch below too
          tag_name: v1
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload_base_image
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./images/alpine-rpi-base-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img.gz
          asset_name: alpine-rpi-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img.gz
          asset_content_type: application/gzip
      - run: echo -n '${{ steps.create_release.outputs.upload_url }}' > upload_url.txt
      - name: Upload upload_url.txt
        uses: actions/upload-artifact@v1
        with:
          name: upload_url
          path: upload_url.txt

  build_packer:
    needs: build_base
    name: build alpine-rpi-images
    runs-on: [ubuntu-18.04]
    strategy:
      matrix:
        flavour:
          - containerd

    steps:
      - uses: actions/checkout@v1
      - name: Download images
        uses: actions/download-artifact@v1
        with:
          name: images
      - name: Install Dependenciestrip_paths
        run: |
          sudo apt-get install -y kpartx qemu-user-static
      - name: Install Packer
        run: |
          gpg --keyserver keys.gnupg.net --recv-keys 51852D87348FFC4C
          curl -fsSLO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip
          curl -fsSLO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_SHA256SUMS
          curl -fsSLO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_SHA256SUMS.sig

          echo -e "trust\n5\ny\n" | gpg --batch --command-fd 0 --edit-key 51852D87348FFC4C
          gpg --verify packer_${PACKER_VERSION}_SHA256SUMS.sig packer_${PACKER_VERSION}_SHA256SUMS
          sha256sum -c --ignore-missing packer_${PACKER_VERSION}_SHA256SUMS

          sudo unzip packer_*.zip -d /usr/local/bin
          packer --version

          mkdir -p $HOME/.packer.d/plugins
          curl --fail --silent --show-error --location \
              -o $HOME/.packer.d/plugins/packer-builder-arm-image \
              https://github.com/solo-io/packer-builder-arm-image/releases/download/v0.1.3/packer-builder-arm-image
          chmod +x $HOME/.packer.d/plugins/packer-builder-arm-image

      - run: |
          PACKER_LOG=1 sudo packer build \
            -var 'iso_url=images/alpine-rpi-base-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img.gz' \
            -var "iso_checksum=$(awk '/ alpine-rpi-base-/{print $1}' images/sha256sums.txt)" \
            packer/${{ matrix.flavour }}.json
          sudo chown $(stat -c '%U:%G' README.md) -R manifest.json output-arm-image

      - run: |
          cat manifest.json
          ls -la . images
          sum="$(awk '{print $1}' manifest.json)"
          mv output-arm-image/image images/alpine-rpi-${{ matrix.flavour }}-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img

      - name: Download upload_url.txt
        uses: actions/download-artifact@v1
        with:
          name: upload_url
      - name: get_upload_url
        run: |
          cat upload_url/upload_url.txt
          echo "::set-output name=upload_url::$(cat upload_url/upload_url.txt)"
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_upload_url.outputs.upload_url }}
          asset_path: ./images/alpine-rpi-${{ matrix.flavour }}-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img
          asset_name: alpine-rpi-${{ matrix.flavour }}-${{ env.ALPINE_VERSION }}-${{ env.ALPINE_ARCH }}.img
          asset_content_type: application/gzip
